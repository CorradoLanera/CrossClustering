% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CrossClusteringSingle.R
\name{CrossClusteringSingle}
\alias{CrossClusteringSingle}
\title{CrossClusteringSingle: a partial clustering algorithm with automatic estimation of the number of clusters and identification of outliers for finding elongated clusters}
\usage{
CrossClusteringSingle(d, k.w.min = 2, k.w.max, k.s.max, out = TRUE)
}
\arguments{
\item{d}{a dissimilarity structure as produced by the function \code{dist}}

\item{k.w.min}{minimum number of clusters for the Ward's minimum variance
method. By default is set equal 2}

\item{k.w.max}{maximum number of clusters for the Ward's minimum variance
method (see details)}

\item{k.s.max}{maximum number of clusters for the Single-linkage method.
It can not be equal or greater than the number of elements to cluster
(see details)}

\item{out}{logical. If \code{TRUE} (default) outliers must be searched (see
details)}
}
\value{
A list of objects describing characteristics of the partitioning as
        follows:
\item{Optimal.cluster}{number of clusters}
\item{Cluster.list}{a list of clusters; each element of this lists contains
  the indices of the elemenents belonging to the cluster}
\item{Silhouette}{the average silhouette witdh over all the clusters}
\item{n.total}{total number of input elements}
\item{n.clustered}{number of input elements that have actually been
  clustered}
}
\description{
This function performs a modified CrossClustering algorithm, tailored to
identify elongated clusters. This method combines the Ward's minimum variance
and Single-linkage algorithms, providing automatic estimation of a suitable
number of elongated clusters and identification of outlier elements.
}
\details{
See cited document for more details.
}
\examples{

### Example on a famous shape data set
### Two moons data
data(twomoons)
plot(twomoons[, 1:2], pch = 19, col = "cornflowerblue")
d <- dist(twomoons[, 1:2], method = "euclidean")
CCmoons <- CrossClusteringSingle(d, k.w.max = 9, k.s.max = 10)

my_col <- sapply(1:dim(twomoons)[1], geneinlista,
  lista = CCmoons$Cluster.list
)
my_col[my_col == "integer(0)"] <- 0
my_col <- unlist(my_col)
my_col <- my_col + 1
plot(twomoons[, 1:2], pch  = 19, col = my_col, xlab = "", ylab = "",
  main = "CrossClusteringSingle", cex.main = 1
)
### Worms data
data(worms)
plot(worms[, 1:2], pch = 19, col = "cornflowerblue")
d <- dist(worms[, 1:2], method = "euclidean")
CCworms <- CrossClusteringSingle(d, k.w.max = 9, k.s.max = 10)

my_col <- sapply(1:dim(worms)[1], geneinlista, lista = CCworms$Cluster.list)
my_col[my_col == "integer(0)"] <- 0
my_col <- unlist(my_col)
my_col <- my_col + 1
plot(worms[, 1:2], pch = 19, col = my_col, xlab = "", ylab = "",
  main = "CrossClusteringSingle", cex.main = 1
)

### CrossClusteringSingle is not affected to chain-effect problem
data(chain_effect)
plot(chain_effect, pch = 19, col = "cornflowerblue")
d <- dist(chain_effect, method = "euclidean")
CCchain_effect <- CrossClusteringSingle(d, k.w.max = 9, k.s.max = 10)

my_col <- sapply(1:dim(chain_effect)[1], geneinlista,
  lista = CCchain_effect$Cluster.list
)
my_col[my_col == "integer(0)"] <- 0
my_col <- unlist(my_col)
my_col <- my_col + 1
plot(chain_effect, pch = 19, col = my_col, xlab = "",ylab = "",
  main = "CrossClusteringSingle", cex.main = 1
)


}
\references{
Tellaroli P, Bazzi M., Donato M., Brazzale A. R., Draghici S. (2017).
E1829: Cross-Clustering: A Partial Clustering Algorithm with Automatic
Estimation of the Number of Clusters. CMStatistics 2017, London 16-18
December, Book of Abstracts (ISBN 978-9963-2227-4-2)
}
\author{
Paola Tellaroli, \email{paola.tellaroli@unipd.it};
Marco Bazzi, \email{bazzi@stat.unipd.it};
Michele Donato, \email{mdonato@stanford.edu}
}
