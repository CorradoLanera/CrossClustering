
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "CrossClustering"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('CrossClustering')
Loading required package: cluster
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CrossClustering")
> ### * CrossClustering
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: CrossClustering
> ### Title: CrossClustering: a partial clustering algorithm with automatic
> ###   estimation of the number of clusters and identification of outliers
> ### Aliases: CrossClustering
> 
> ### ** Examples
> 
> ### Generate simulated data
> toy <- matrix(NA, nrow=10, ncol=7)
> colnames(toy) <- paste("Sample", 1:ncol(toy), sep="")
> rownames(toy) <- paste("Gene", 1:nrow(toy), sep="")
> set.seed(123)
> toy[,1:2] <- rnorm(n=nrow(toy)*2, mean=10, sd=0.1)
> toy[,3:4] <- rnorm(n=nrow(toy)*2, mean=20, sd=0.1)
> toy[,5:6] <- rnorm(n=nrow(toy)*2, mean=5, sd=0.1)
> toy[,7] <- runif(n=nrow(toy), min=0, max=1)
> 
> ### toy is transposed as we want to cluster samples (columns of the original matrix)
> d <- dist(t(toy), method="euclidean")
> 
> ### Run CrossClustering
> toyres <- CrossClustering(d, k.w.min=2, k.w.max=5, k.c.max=6, out=TRUE)
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.097 0.003 0.1 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
